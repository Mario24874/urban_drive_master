/**
 * Script de prueba para el sistema dual Firebase + Supabase
 * Ejecutar con: node test-dual-system.js
 */

import { writeData, readData, getSyncStatus } from './src/services/database-sync.js';

async function testDualSystem() {
  console.log('üß™ PROBANDO SISTEMA DUAL Firebase + Supabase\n');

  // 1. Ver estado inicial
  console.log('üìä Estado inicial:');
  const initialStatus = getSyncStatus();
  console.log('- Base de datos principal:', initialStatus.primaryDB);
  console.log('- Firebase online:', initialStatus.isFirebaseOnline);
  console.log('- Sincronizaci√≥n activa:', initialStatus.isSyncEnabled);
  console.log('- Datos pendientes:', initialStatus.pendingCount);
  console.log('');

  // 2. Crear usuario de prueba
  console.log('üë§ Creando usuario de prueba...');
  const testUser = {
    email: 'test@urbandrive.com',
    displayName: 'Usuario Prueba',
    phone: '+57 300 123 4567',
    userType: 'user',
    isVisible: true,
    location: {
      lat: 4.710989,
      lng: -74.072092,
      address: 'Bogot√°, Colombia'
    },
    contacts: []
  };

  const userId = 'test-user-' + Date.now();
  
  try {
    const writeSuccess = await writeData('users', userId, testUser);
    console.log('‚úÖ Usuario creado:', writeSuccess ? '√âxito' : 'Error');
  } catch (error) {
    console.error('‚ùå Error creando usuario:', error.message);
  }
  
  // 3. Leer usuario
  console.log('\nüìñ Leyendo usuario...');
  try {
    const readUser = await readData('users', userId);
    if (readUser) {
      console.log('‚úÖ Usuario le√≠do:', readUser.displayName);
      console.log('   Email:', readUser.email);
      console.log('   Ubicaci√≥n:', readUser.location?.address);
    } else {
      console.log('‚ùå Usuario no encontrado');
    }
  } catch (error) {
    console.error('‚ùå Error leyendo usuario:', error.message);
  }

  // 4. Crear invitaci√≥n de prueba
  console.log('\nüì® Creando invitaci√≥n de prueba...');
  const testInvitation = {
    inviterEmail: 'test@urbandrive.com',
    inviterName: 'Usuario Prueba',
    inviterPhone: '+57 300 123 4567',
    recipientPhone: '+57 300 987 6543',
    used: false,
    expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 d√≠as
  };

  const invitationId = 'invite-' + Date.now();
  
  try {
    const inviteSuccess = await writeData('invitations', invitationId, testInvitation);
    console.log('‚úÖ Invitaci√≥n creada:', inviteSuccess ? '√âxito' : 'Error');
  } catch (error) {
    console.error('‚ùå Error creando invitaci√≥n:', error.message);
  }

  // 5. Estado final
  console.log('\nüìä Estado final:');
  const finalStatus = getSyncStatus();
  console.log('- Base de datos principal:', finalStatus.primaryDB);
  console.log('- Firebase online:', finalStatus.isFirebaseOnline);
  console.log('- Datos pendientes:', finalStatus.pendingCount);
  
  if (finalStatus.pendingCount > 0) {
    console.log('‚è≥ Hay datos pendientes de sincronizaci√≥n');
  } else {
    console.log('‚úÖ Todos los datos sincronizados');
  }

  console.log('\nüéâ Prueba completada!');
  console.log('\nPuedes verificar los datos en:');
  console.log('- Firebase: https://console.firebase.google.com/project/urbandrive-1082b/firestore');
  console.log('- Supabase: https://app.supabase.com/project/jdsojfcdcxumgwbgvsxt/editor');
}

// Ejecutar prueba
testDualSystem().catch(console.error);